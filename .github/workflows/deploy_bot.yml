name: deploy-to-eb

env:
  APP_NAME: caldeiraobot-app-v3
  ENV_APP_NAME: Caldeiraobotappv3-env
  S3_BUCKET: caldeirao-bot-bucket-sp
  AWS_PLATFORM: Docker
  PIPELINE_ID: ${{github.run_id}}-${{github.run_number}}

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Deploy dev.
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
          unzip awscliv2.zip
          ./aws/install
          aws configure set aws_access aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{secrets.AWS_REGION}}
          echo "Collect autoScaling instances"
          instanceJson=$(aws autoscaling describe-auto-scaling-instances)
          echo "Passing to json"
          echo $instanceJson > output.json
          echo "Collecting instanceId"
          instanceid=$(jq '.AutoScalingInstances[0].InstanceId' output.json)
          echo "Parsing InstanceId"
          instanceid=$(sed -e 's/^"//' -e 's/"$//' <<< $instanceid)
          echo "Terminating instances"
          aws ec2 terminate-instances --instance-ids $instanceid

      #- name: Upload package to S3 bucket
      #  run: aws s3 cp ${{env.APP_NAME}}.zip s3://${{env.S3_BUCKET}}/

      #- name: Create new ElasticBeanstalk Application Version
      #  run: |
      #    aws elasticbeanstalk create-application-version \
      #    --application-name ${{env.APP_NAME}} \
      #    --source-bundle S3Bucket="${{env.S3_BUCKET}}",S3Key="${{env.APP_NAME}}.zip" \
      #    --version-label "ver-${{github.run_id}}-${{github.run_number}}" \
      #    --description "commit-sha-${{ github.sha }}"

      #- name: Deploy new ElasticBeanstalk Application Version
      #  run: aws elasticbeanstalk update-environment --environment-name ${{env.ENV_APP_NAME}} --version-label "ver-${{github.run_id}}-${{github.run_number}}"
