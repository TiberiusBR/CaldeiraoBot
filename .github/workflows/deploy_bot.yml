name: deploy-to-eb

env:
  APP_NAME: caldeiraobot-app-v2
  S3_BUCKET: caldeirao-bot-bucket
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_PLATFORM: Docker
  PIPELINE_ID: ${{github.run_id}}-${{github.run_number}}

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch .env \
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env

      - name: Create ZIP deployment package
        run: zip -r ${{env.APP_NAME}}.zip ./

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Upload package to S3 bucket
        run: aws s3 cp ${{env.APP_NAME}}.zip s3://${{env.S3_BUCKET}}/

      - name: Create new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name MyAwesomeApp \
          --source-bundle S3Bucket="${{env.S3_BUCKET}}",S3Key="${{env.APP_NAME}}.zip" \
          --version-label "ver-${{ github.sha }}" \
          --description "commit-sha-${{ github.sha }}"

      - name: Deploy new ElasticBeanstalk Application Version
        run: aws elasticbeanstalk update-environment --environment-name Caldeiraobotappv2-env --version-label "ver-${{ github.sha }}"

# name: Deploy master

# env:
# #   BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
#   APP_NAME: caldeiraobot-app-v2
# #   S3_BUCKET: caldeirao-bot-bucket
# #   AWS_REGION: us-east-1
# #   AWS_PLATFORM: Docker
#   PIPELINE_ID: ${{github.run_id}}-${{github.run_number}}

# on:
#   push:
#     branches:
#     - master

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:

#     - name: Checkout source code
#       uses: actions/checkout@v2

#     - name: Generate deployment package
#       run: zip -r ${{env.APP_NAME}}.zip . -x '*.git*'

#     - name: Deploy to EB
#       uses: einaregilsson/beanstalk-deploy@v21
#       with:
#         aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         application_name: ${{env.APP_NAME}}
#         environment_name: Caldeiraobotappv2-env
#         version_label: ${{env.APP_NAME}}-${{env.PIPELINE_ID}}
#         region: us-east-1
#         deployment_package: ${{env.APP_NAME}}.zip
#         existing_bucket_name: caldeirao-bot-bucket


#name: deploy_bot

# env:
#   BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
#   APP_NAME: caldeiraobot-app-v2
#   S3_BUCKET: caldeirao-bot-bucket
#   AWS_REGION: us-east-1
#   AWS_PLATFORM: Docker
#   PIPELINE_ID: ${{github.run_id}}-${{github.run_number}}

# on:
#   push:
#     branches: [master]

# jobs:
#   create_eb_version:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Configure AWS credentials 
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.AWS_REGION }}
#       - run: |
#           AWS_VERSION_LABEL=${{env.APP_NAME}}-${{env.PIPELINE_ID}}

#           echo "Creating Source Bundle"
#           zip -r ${{env.APP_NAME}}.zip index.py cogs helpers Dockerfile requirements.txt
#           S3_KEY="$AWS_VERSION_LABEL.zip"

#           echo "Uploading Source Bundle to S3"
#           aws s3 cp ${{env.APP_NAME}}.zip s3://${{env.S3_BUCKET}}/${S3_KEY} --region ${{env.AWS_REGION}}

#           echo "Creating Elastic Beanstalk version"
#           aws elasticbeanstalk create-application-version --application-name ${{env.APP_NAME}} --version-label $AWS_VERSION_LABEL --region ${{env.AWS_REGION}} --source-bundle S3Bucket=${{env.S3_BUCKET}},S3Key=${S3_KEY} --auto-create-application

#   deploy_aws:
#     needs: [create_eb_version]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up Python 3.8 (needed for eb cli)
#         uses: actions/setup-python@v1
#         with:
#           python-version: "3.8"
#       - name: Configure AWS credentials 
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-id: ${{ secrets.AWS_ID }}
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.AWS_REGION }}
#       - run: |
#           AWS_VERSION_LABEL=${{env.APP_NAME}}-${{env.PIPELINE_ID}}

#           touch .env
#           echo BOT_TOKEN=${{env.BOT_TOKEN}}

#           echo "Installing Elastic Beanstalk Cli"
#           python -m pip install --upgrade pip
#           pip install awsebcli --upgrade
#           eb --version

#           echo "Deploy init"
#           eb init -i ${{env.APP_NAME}} -p ${{env.AWS_PLATFORM}} -k ${{secrets.AWS_ID}} --region ${{env.AWS_REGION}}
#           eb deploy ${{env.APP_NAME}} --version ${AWS_VERSION_LABEL}
#           echo "Deploy finished"
